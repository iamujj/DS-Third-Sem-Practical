#include<stdio.h>
#include<stdlib.h>
#include<stdbool.h>
#define scanf scanf_s

struct stck
{
    int* a;
    unsigned int cap;
    int top;
};

struct stck* createstack(unsigned int c)
{
    struct stck* mstack = (struct stck*)malloc(sizeof(struct stck));
    mstack->cap = c;
    mstack->top = -1;
    mstack->a = (int*)malloc((mstack->cap) * sizeof(int));
    return mstack;
}
void push(struct stck* mstack, int x)
{
    if ((mstack->top) == ((mstack->cap) - 1))
    {
        printf("Stack is full! Pop out an item to push a new item\n");
        return;
    }
    mstack->top++;
    mstack->a[mstack->top] = x;
    printf("Pushed %d\n", x);
    return;
}
int pop(struct stck* mstack)
{
    if ((mstack->top) == -1)
    {
        printf("Stack is Empty! Push something in it\n");
        return INT_MIN;
    }
    int res = mstack->a[mstack->top];
    mstack->top--;
    return res;
}
int peek(struct stck* mstack)
{
    if ((mstack->top) == -1)
    {
        printf("Stack is Empty! Push something in it\n");
        return INT_MIN;
    }
    return (mstack->a[mstack->top]);
}
int size(struct stck* mstack)
{
    return (mstack->top + 1);
}
bool isempty(struct stck* mstack)
{
    return (mstack->top == -1);
}
bool isfull(struct stck* mstack)
{
    return (mstack->top == (mstack->cap - 1));
}
void display(struct stck* mstack)
{
    if (mstack->top == -1)
    {
        printf("Stack is Empty.\n");
        return;
    }
    printf("Elements of Stack from top to bottom are : %d ", mstack->a[mstack->top]);
    int t = mstack->top;
    while (t--)
    {
        printf("%d ", mstack->a[t]);
    }
    printf("\n");
    return;
}

int main()
{
    struct stck* mstack = createstack(5);
    push(mstack, 5);
    push(mstack, 4);
    push(mstack, 3);
    display(mstack);
    push(mstack, 2);
    push(mstack, 1);
    printf("Is Full? : %d\n", isfull(mstack));
    printf("%d popped\n", pop(mstack));
    printf("Is Full? : %d\n", isfull(mstack));
    push(mstack, 0);
    display(mstack);
    printf("%d peek\n", peek(mstack));
    printf("%d size\n", size(mstack));
    printf("Is Empty? : %d\n", isempty(mstack));

    return 0;
}
