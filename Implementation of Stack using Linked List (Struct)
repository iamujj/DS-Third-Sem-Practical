#include<stdio.h>  
#include<stdlib.h>
#define scanf scanf_s

void push();
void pop();
void display();
void peek();
void size();
void isempty();

struct node
{
    int val;
    struct node* next;
};

struct node* head = NULL;

int main()
{
    int choice = 0;
    printf("\n*********Stack operations using linked list*********\n");
    printf("\n----------------------------------------------------");

    printf("\n\nChose one from the below options...\n");
    printf("\n1.Push  2.Pop  3.Show  4.Exit  5.Peek  6.Size  7.IsEmpty");
    while (choice != 4)
    {
        printf("\nEnter your choice : ");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
        {
            push();
            break;
        }
        case 2:
        {
            pop();
            break;
        }
        case 3:
        {
            display();
            break;
        }
        case 4:
        {
            printf("Program Ended\n");
            break;
        }
        case 5:
        {
            peek();
            break;
        }
        case 6:
        {
            size();
            break;
        }
        case 7:
        {
            isempty();
            break;
        }
        default:
        {
            printf("Please Enter valid choice ");
        }
        }
    }

    return 0;
}
void push()
{
    int val;
    struct node* ptr = (struct node*)malloc(sizeof(struct node));
    if (ptr == NULL)
    {
        printf("Not able to push the element\n");
        return;
    }
    else
    {
        printf("Enter the value\n");
        scanf("%d", &val);
        if (head == NULL)
        {
            ptr->val = val;
            ptr->next = NULL;
            head = ptr;
        }
        else
        {
            ptr->val = val;
            ptr->next = head;
            head = ptr;

        }
        printf("Item pushed\n");
    }
    return;
}

void pop()
{
    int item;
    struct node* ptr;
    if (head == NULL)
    {
        printf("Underflow");
        return;
    }
    else
    {
        item = head->val;
        ptr = head;
        head = head->next;
        free(ptr);
        printf("Popped Item is %d\n", item);
    }
    return;
}
void display()
{
    int i;
    struct node* ptr;
    ptr = head;
    if (ptr == NULL)
    {
        printf("Stack is empty\n");
        return;
    }
    else
    {
        printf("Printing Stack elements\n");
        while (ptr != NULL)
        {
            printf("%d\n", ptr->val);
            ptr = ptr->next;
        }
    }
    return;
}
void peek()
{
    int item;
    struct node* ptr;
    ptr = head;
    if (ptr == NULL)
    {
        printf("Stack is empty\n");
        return;
    }
    else
    {
        item = ptr->val;
        printf("Peek Element is : %d\n", item);
    }
    return;
}
void size()
{
    int c = 0;
    struct node* ptr;
    ptr = head;
    if (ptr == NULL)
    {
        printf("Size of the Stack is 0\n");
        return;
    }
    else
    {
        while (ptr != NULL)
        {
            c++;
            ptr = ptr->next;
        }
        printf("Size of the Stack is : %d\n", c);
    }
    return;
}
void isempty()
{
    if (head == NULL)
    {
        printf("True\n");
        return;
    }
    else
        printf("False\n");
    return;
}
